Algorithm : 
Start the program .
Declare the assembler directives.	
Declare the variable .
Declare the list which consist random values.
Get the data into data segment.
Load the effective address in a register .
Declare a pointer and point it to that register.
Set the counter value based on the values stored in the list.
Start comparing the values among themselves .
If no carry is generated then  smallest number is obtained.
If carry is generated then largest number is obtained.
Decrement the counter register and compare until count value becomes 0.
Repeat steps 8 to 11 until step 12 is obtained.
Display the output in the register. 
Terminate the program 


Programs :
.model small
.data
    	A dw 1h,2h,3h,4h,5h,6h
.code
 start:
    	mov ax,@data
   	 mov ds,ax
   	mov cl,06h
   	 lea bx,A
   	mov Dx,word PTR[bx]
   	 mov ax,0000h
    	n1:cmp ax,word PTR[bx]
     	      jnc n2
   	      mov ax,word PTR[bx]
   	 n2:cmp dx,word PTR[bx]
     	       jc n3
      	      mov dx,word PTR[bx]
    	n3:add bx,02
      	dec cl
      	cmp cl,00h
      	jnz n1
      	int 03h
end


