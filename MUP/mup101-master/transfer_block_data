Algorithm : 
Start the program .
Declare the assembler directives.	
Declare the list which consist data denoted as block1.
Get the data into data segment.
Declare extra segment which consist of another empty block .
Load the effective address of the block1 to source index [SI].
Load the effective address of the block2 to destination index[DI].
Clear the direction flag so that auto increment of SI and DI takes place.
Repeatedly keep moving until all the values of SI are moved to DI.
Display the output in the register. 
Terminate the program 

Programs :
.model small
.data 
	block1 db 1,2,3,4,5,6,7,8,9,10h
	extra segment
	block2 db  10 dup(0)
.code
start:
	mov bx,@data
	mov ds,bx
	mov ax,extra
	mov es,ax
	lea si,block1
	lea di,block2
	mov cx,10h
	cld	
	rep movsb
	int 03h
end
