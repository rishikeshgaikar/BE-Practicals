Algorithm : 
Start the program .
Declare the assembler directives.	
Declare the variables .
Get the data into data segment.
Start the program by loading the first data into a register.
Move the next data into another register. 
Perform the necessary operation (Addition ,Subtraction ,Division ,Multiplication) using appropriate instructions.
Store the data in the accumulator.
Display the output in the register. 
Terminate the program 

Programs
1) ADDITION OF 8-BIT HEXADECIMAL NO.
PROGRAM:
.model small	                                        ; Assembler directives declaration
.data                                                 ; Start the data segment
var1 dB 04H                                           ; Load variable var1 with data 04H
var2 dB 02H                                           ; Load variable var2 with data 02H
.code                                                 ; Start the code segment                                   
start:
mov BX,@data	; Initialize data section
mov DS,BX	; Initialize data section
mov AL,var1	; Load number1 in AL
mov CL,var2	; Load number2 in CL
ADD AL,CL	; Add numbers and result in AL
int 03H	; Interrupt
end	; End Program
OUTPUT:


2) SUBTRACTION OF 8-BIT HEXADECIMAL NO.
PROGRAM:
.model small	;Assembler directives declaration
.data	; Start the data segment
var1 dB 04H	; Load variable var1 with data 04H
var2 dB 02H	; Load variable var2 with data 02H
.code	; Start the code segment
start:	
mov BX,@data	; Initialize data section
mov DS,BX	; Initialize data section
mov AL,var1	; Load number1 in AL
mov CL,var2	; Load number2 in CL
SUB AL,CL	; Subtract numbers and result in AL
int 03H	; Interrupt
end	; End Program
OUTPUT:



3) MULTIPLICATION OF 8-BIT HEXADECIMAL NO.
PROGRAM:
.model small	; Assembler directives declaration
.data	; Start the data segment
var1 dB 04H	; Load variable var1 with data 04H
var2 dB 02H	; Load variable var2 with data 02H
.code	; Start the code segment
start:
mov BX,@data	; Initialize data section
mov DS,BX	; Initialize data section
mov AL,var1	; Load number1 in AL
mov CL,var2	; Load number2 in CL
MUL CX	; Multiply numbers and result in CX
int 03H	; Interrupt
end	; End Program
OUTPUT:



4) DIVISION OF 8-BIT  HEXADECIMAL NO.
PROGRAM:
.model small	; Assembler directives declaration
.data	; Start the data segment
var1 dB 04H	; Load variable var1 with data 04H
var2 dB 02H	; Load variable var2 with data 02H
.code	; Start the code segment
start:
mov BX,@data	; Initialize data section
mov DS,BX	; Initialize data section
mov AL,var1	; Load number1 in AL
mov CL,var2	; Load number2 in CL
DIV CX	; Divide numbers and result in CX
int 03H	; Interrupt
end	; End Program
OUTPUT:



5) ADDITION OF 16-BIT HEXADECIMAL NO.
PROGRAM:
.model small	; Assembler directives declaration
.data	; Start the data segment
var1 dW 0006H	; Load variable var1 with data 0006H
var2 dW 0003H	; Load variable var2 with data 0003H
.code	; Start the code segment
start:
mov BX,@data	; Initialize data section
mov DS,BX	; Initialize data section
mov AX,var1	; Load number1 in AX
mov CX,var2	; Load number2 in CX
ADD AX,CX	; Add numbers and result in AX
int 03H	; Interrupt
end	; End Program
OUTPUT:



6) SUBTRACTION OF 16-BIT HEXADECIMAL NO.
PROGRAM:
.model small	; Assembler directives declaration
.data	; Start the data segment
var1 dW 0006H	; Load variable var1 with data 0006H
var2 dW 0003H	; Load variable var2 with data 0003H
.code	; Start the code segment
start:
mov BX,@data	; Initialize data section
mov DS,BX	; Initialize data section
mov AX,var1	; Load number1 in AX
mov CX,var2	; Load number2 in CX
SUB AX,CX	; Subtract numbers and result in AX
int 03H	; Interrupt
end	; End Program
OUTPUT:



7) MULTIPLICATION OF 16-BIT HEXADECIMAL NO.
PROGRAM:
.model small	; Assembler directives declaration
.data	; Start the data segment
var1 dW 0004H	; Load variable var1 with data 0004H
var2 dW 0002H	; Load variable var2 with data 0002H
.code	; Start the code segment
start:
mov BX,@data	; Initialize data section
mov DS,BX	; Initialize data section
mov AX,var1	; Load number1 in AX
mov CX,var2	; Load number2 in CX
MUL CX	; Multiply numbers and result in CX
int 03H	; Interrupt
end	; End Program
OUTPUT:



8) DIVISION OF 16-BIT HEXADECIMAL NO.
PROGRAM:
.model small	; Assembler directives declaration
.data	; Start the data segment
var1 dW 0004H	; Load variable var1 with data 0004H
var2 dW 0002H	; Load variable var2 with data 0002H
.code	; Start the code segment
start:
mov BX,@data	; Initialize data section
mov DS,BX	; Initialize data section
mov AX,var1	; Load number1 in AX
mov CX,var2	; Load number2 in CX
DIV CX	; Divide numbers and result in CX
int 03H	; Interrupt
end	; End Program
OUTPUT:

